final String tableName = 'goals';

//establishing the column table names
class GoalFields {
  //creating list of all goal field names
  static final List<String> values = [
    id,
    name,
    unit,
    distance,
    stroke,
    goalTime,
    currentTime,
    needValue,
    needPercentValue,
    currentComparison,
  ];

  static final String id = '_id';
  static final String name = 'name';
  static final String unit = 'unit';
  static final String distance = 'distance';
  static final String stroke = 'stroke';
  static final String goalTime = 'goalTime';
  static final String currentTime = 'currentTime';
  static final String needValue = 'needValue';
  static final String needPercentValue = 'needPercentValue';
  static final String currentComparison = 'currentComparison';
}

class Goal {
  int? id;
  String? name;
  String? unit;
  String? distance;
  String? stroke;
  String? goalTime;
  String? currentTime;
  double? needValue;
  double? needPercentValue;
  bool? isVisible;
  String? currentComparison;

  Goal(
      {this.id,
      required this.name,
      required this.unit,
      required this.distance,
      required this.stroke,
      required this.goalTime,
      required this.currentTime,
      required this.needValue,
      required this.needPercentValue,
      required this.currentComparison})
      : isVisible = true;

  Map<String, Object?> toJson() => {
        GoalFields.id: id,
        GoalFields.name: name,
        GoalFields.unit: unit,
        GoalFields.distance: distance,
        GoalFields.stroke: stroke,
        GoalFields.goalTime: goalTime,
        GoalFields.currentTime: currentTime,
        GoalFields.needValue: needValue,
        GoalFields.needPercentValue: needPercentValue,
        GoalFields.currentComparison: currentComparison,
      };

  static Goal fromJson(Map<String, Object?> json) => Goal(
        id: json[GoalFields.id] as int?,
        name: json[GoalFields.name] as String,
        unit: json[GoalFields.unit] as String,
        distance: json[GoalFields.distance] as String,
        stroke: json[GoalFields.stroke] as String,
        goalTime: json[GoalFields.goalTime] as String,
        currentTime: json[GoalFields.currentTime] as String,
        needValue: json[GoalFields.needValue] as double,
        needPercentValue: json[GoalFields.needPercentValue] as double,
        currentComparison: json[GoalFields.currentComparison] as String,
      );

  Goal copy(
          {int? id,
          String? name,
          String? unit,
          String? distance,
          String? stroke,
          String? goalTime,
          String? currentTime,
          double? needValue,
          double? needPercentValue,
          bool? isVisible,
          String? currentComparison}) =>
      Goal(
        // id will be set to argument (the custom one that is set by user), but if null, then it will be set to the instance's id (one that is automatically generated by the database)
        id: id ?? this.id,
        name: name ?? this.name,
        unit: unit ?? this.unit,
        distance: distance ?? this.distance,
        stroke: stroke ?? this.stroke,
        goalTime: goalTime ?? this.goalTime,
        currentTime: currentTime ?? this.currentTime,
        needValue: needValue ?? this.needValue,
        needPercentValue: needPercentValue ?? this.needPercentValue,
        currentComparison: currentComparison ?? this.currentComparison,
      );
}
